<?php

namespace App\Repository;
use App\Entity\User;
use App\Repository\RepositoryPaginatorTrait;

/**
 * ProjectFileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FileRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $user
     * @param $filters
     * @param int $currentPage
     * @param $perPage
     * @param string $order
     * @param string $orderBy
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getFiles(
        $user,
        $filters,
        $orderBy,
        $order,
        $currentPage,
        $perPage)
    {
        $qb = $this->createQueryBuilder('f');

        $qb
            ->select('f');

        $qb->andWhere('f.owner = :userId')
            ->setParameter('userId', $user);

        if (!empty($filters['fileName'])) {
            $qb
                ->andWhere($qb->expr()->like('f.fileName', ':fileName'))
                ->setParameter('fileName', '%' . $filters['fileName'] . '%');
        }

        if (!empty($orderBy))
        {
            $qb->orderBy('f.' . $orderBy, $order);
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }


    /**
     * @param $user
     * @param $filters
     * @param int $currentPage
     * @param int $perPage
     * @param string $order
     * @param string $orderBy
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getDaysOff(
        $user,
        $filters,
        $orderBy,
        $order,
        $currentPage,
        $perPage
    ) {
        $qb = $this->createQueryBuilder('d');

        $qb->select('d');
        $qb->leftJoin('d.status', 'ds');

        $qb
            ->andWhere('d.owner IN (:employees)')
            ->setParameter("employees", $employees);

        $qb = $this->applyFilters($qb, $filters);

        if (!empty($orderBy)) {
            if ($orderBy == 'owner') {
                $qb
                    ->leftJoin('d.owner', 'u')
                    ->orderBy('u.lastname', $order);
            } elseif ($orderBy == 'status') {
                $qb
                    ->orderBy('ds.status', $order);
            } else {
                $qb->orderBy('d.' . $orderBy, $order);
            }
        } else {
            $qb->orderBy('ds.priority', 'ASC');
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }

}
